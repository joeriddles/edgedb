.. _ref_guide_deployment_digitalocean:

===============
On DigitalOcean
===============

In this guide we show how to deploy EdgeDB to DigitalOcean either with a
`One-click Deploy`_ option or a `managed PostgreSQL`_ database as the backend
(recommended).

.. _managed PostgreSQL: ref_guide_deployment_digitalocean_managed_


One-click Deploy
++++++++++++++++

Click the button below and follow the droplet creation workflow on
DigitalOcean. Once deployed you will have an EdgeDB instance running. The
default admin password is ``edgedbpassword``. We strongly recommend that you
change the password.

`1-click deploy button <1-click-button_>`_

.. XXX: to be determined
.. _1-click-button: ???

To change the password run the following. You will find you droplet ip address
on digitalocean_. The EdgeDB cli installer can be found here_.

.. _digitalocean: https://cloud.digitalocean.com/droplets?
.. _here: edgedb-install_

.. code-block:: bash

   IP=<your-droplet-ip>
   read -sp "Password: " PASSWORD
   printf edgedbpassword | edgedb query \
     --host $IP \
     --password-from-stdin \
     --tls-security insecure \
     "alter role edgedb set password := '${PASSWORD}'"

Optionally create a local link to your new EdgeDB server.

.. code-block:: bash

   printf $PASSWORD | edgedb instance link \
     --host $IP \
     --trust-tls-cert \
     --password-from-stdin \
     --non-interactive \
     digitalocean


.. _ref_guide_deployment_digitalocean_managed:

Deploy with Managed PostgreSQL
++++++++++++++++++++++++++++++

Prerequisites
=============

* ``edgedb`` CLI (`install <edgedb-install_>`_)
* DigitalOcean account
* ``doctl`` CLI (`install <doclt-install_>`_)
* ``jq`` (`install <jq_>`_)

.. _edgedb-install: https://www.edgedb.com/install
.. _doclt-install: https://docs.digitalocean.com/reference/doctl/how-to/install
.. _jq: https://stedolan.github.io/jq/


Create a managed PostgreSQL instance
====================================

If you already have a PostgreSQL instance you can skip this step.

.. code-block:: bash

   DSN="$(
     doctl databases create edgedb-postgres \
       --engine pg \
       --version 12 \
       --size db-s-1vcpu-1gb \
       --num-nodes 1 \
       --region sfo3 \
       --output json \
     | jq -r '.[0].connection.uri'
   )"


Provision a droplet
===================

Replace ``$SSH_KEY_IDS`` with the ids for the ssh keys you want to ssh into the
new droplet with. Separate multiple values with a comma. You can list your
keys with ``doctl compute ssh-key list``.  If you don't have any ssh keys in
your DigitalOcean account you can follow `this guide <upload-ssh-keys_>`_ to do
that now.

.. _upload-ssh-keys:
   https://docs.digitalocean.com/products/droplets
   /how-to/add-ssh-keys/to-account/

.. code-block:: bash

   # XXX: we don't have a published edgedb image yet
   IP="$(
     doctl compute droplet create edgedb \
       --image edgedb-1-rc3 \
       --region sfo3 \
       --size s-2vcpu-4gb \
       --ssh-keys $SSH_KEY_IDS \
       --format PublicIPv4 \
       --no-header \
       --wait
   )"

Configure the backend postgres DSN. To simplify the initial deployment, let's
instruct EdgeDB to run in insecure mode (with password authentication off and
an autogenerated TLS certificate). We will secure the instance once things are
up and running.

.. code-block:: bash

   ssh root@$IP "
   cat << EOF > /etc/edgedb/env
   EDGEDB_SERVER_BACKEND_DSN=${DSN}
   # Change to strict after setting a password.
   EDGEDB_SERVER_SECURITY=insecure_dev_mode
   EOF
   "

   ssh root@$IP "systemctl restart edgedb.service"

Set the superuser password.

.. code-block:: bash

   read -sp "Admin password: " PASSWORD

   edgedb -H $IP --tls-security insecure query \
     "alter role edgedb set password := '$PASSWORD'"

Set the security policy to strict.

.. code-block:: bash

   ssh root@$IP "
   cat << EOF > /etc/edgedb/env
   EDGEDB_SERVER_BACKEND_DSN=${DSN}
   EDGEDB_SERVER_SECURITY=strict
   EOF
   "

   ssh root@$IP "systemctl restart edgedb.service"

That's it! You can now start using the EdgeDB instance located at
``edgedb://$IP``.


Create a local link to the new EdgeDB instance
==============================================

To access the EdgeDB instance you've just provisioned on DigitalOcean from your
local machine run the following command.

.. code-block:: bash

   printf $PASSWORD | edgedb instance link \
     --password-from-stdin \
     --trust-tls-cert \
     --host $IP \
     --non-interactive \
     digitalocean

You can now use the EdgeDB instance deployed on DigitalOcean as
``digitalocean``, for example:

.. code-block:: bash

   edgedb -I digitalocean
